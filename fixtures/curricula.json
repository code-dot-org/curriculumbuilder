[{"fields": {"content": "The College Board has proposed a new course called AP\u00ae Computer Science Principles. This course is designed to be far more than a traditional introduction to programming - it is a rigorous, engaging, and approachable course that explores many of the big, foundational ideas of computing so that all students understand how these concepts are transforming the world we live in. The official AP\u00ae exam is set to go live in the 2016-17 school year with an exam and performance-based assessments.", "gradeband": 20}, "model": "curricula.curriculum", "pk": 23}, {"fields": {"content": "The CS Fundamentals units are designed to be a great introduction to CS for students of all ages, starting as young as Kindergarten. The courses blend online, self-guided and self-paced tutorials with \u201cunplugged\u201d activities that require no computer at all. Each course consists of about 20 lessons that may be implemented as one unit or over the course of a semester. Even kindergarten-aged pre-readers can participate.", "gradeband": 7}, "model": "curricula.curriculum", "pk": 15}, {"fields": {"content": "Code.org has partnered with Bootstrap to develop a curriculum which teaches algebraic and geometric concepts through computer programming. The twenty lessons focus on concepts like order of operations, the Cartesian plane, function composition and definition, and solving word problems - all within the context of video game design. By shifting classwork from abstract pencil-and-paper problems to a series of relevant programming problems, Code.org CS in Algebra demonstrates how algebra applies in the real world, using an exciting, hands-on approach to create something cool.", "gradeband": 17}, "model": "curricula.curriculum", "pk": 21}, {"fields": {"content": "Code.org has partnered with the award-winning Project GUTS (Growing Up Thinking Scientifically) to deliver a middle school science program consisting of four instructional modules and professional development for the introduction of computer science concepts into science classrooms within the context of modeling and simulation. The goal of the program is to situate computer science practices and concepts within the context of life, physical, and earth sciences, and to prepare students to pursue formal, year-long courses in computer science during high school. CS in Science is based on a crosswalk identifying areas of overlap between the NGSS and Computer Science Teachers Association K-12 Computer Science Standards.", "gradeband": 17}, "model": "curricula.curriculum", "pk": 22}, {"fields": {"content": "Students continue programming and building web apps, now with a view towards data: processing it with algorithms, and the implications of storing data collected from and by others on the web. Students explore \u201cbig data\u201d by making queries against a data analysis api.", "curriculum": 23}, "model": "curricula.unit", "pk": 31}, {"fields": {"content": "What can be represented with a single bit and how do we get a single bit of information from one place to another? This unit explores the technical challenges and questions that arise from the need to represent digital information in computers and transfer it between people and computational devices. Topics include: the digital representation of information - numbers, text, images, and communication protocols", "curriculum": 23}, "model": "curricula.unit", "pk": 28}, {"fields": {"content": "Class time devoted to preparation and execution of the AP\u00ae Performance Tasks: Explore and Create.", "curriculum": 23}, "model": "curricula.unit", "pk": 32}, {"fields": {"content": "Students learn the fundamentals programming constructs of JavaScript by solving problems with \u201cturtle graphics.\u201d Then move on to programming simple event driven apps. An emphasis is placed on enabling students to solve problems and write code in teams.", "curriculum": 23}, "model": "curricula.unit", "pk": 30}, {"fields": {"content": "Students continue to work together to invent solutions and protocols to many of the problems that arise in the structure and function of the Internet. Topics include the Internet Protocol, DNS, TCP/IP, cryptography and other security and hacking concerns. Topics include: encryption, security, computationally hard problems, and internet protocols", "curriculum": 23}, "model": "curricula.unit", "pk": 29}, {"fields": {"content": "20 hour introductory Computer Science course for pre-readers.", "curriculum": 15}, "model": "curricula.unit", "pk": 16}, {"fields": {"content": "For early readers", "curriculum": 15}, "model": "curricula.unit", "pk": 17}, {"fields": {"content": "For students who have taken course 2", "curriculum": 15}, "model": "curricula.unit", "pk": 18}, {"fields": {"content": "For students who have taken course 3", "curriculum": 15}, "model": "curricula.unit", "pk": 19}, {"fields": {"lesson": 11, "_order": 0, "unit": 16}, "model": "curricula.unitlesson", "pk": 1}, {"fields": {"lesson": 12, "_order": 0, "unit": 16}, "model": "curricula.unitlesson", "pk": 2}, {"fields": {"lesson": 20, "_order": 1, "unit": 16}, "model": "curricula.unitlesson", "pk": 3}, {"fields": {"lesson": 33, "_order": 0, "unit": 28}, "model": "curricula.unitlesson", "pk": 4}, {"fields": {"lesson": 34, "_order": 1, "unit": 28}, "model": "curricula.unitlesson", "pk": 6}, {"fields": {"lesson": 35, "_order": 2, "unit": 28}, "model": "curricula.unitlesson", "pk": 7}, {"fields": {"lesson": 36, "_order": 3, "unit": 28}, "model": "curricula.unitlesson", "pk": 8}, {"fields": {"lesson": 37, "_order": 4, "unit": 28}, "model": "curricula.unitlesson", "pk": 9}]