[{"fields": {"detailDef": "A process or set of rules to be followed in calculations or other problem-solving operations, especially by a computer.", "simpleDef": "A list of steps that you can follow to finish a task.", "word": "Algorithm"}, "model": "lessons.vocab", "pk": 1}, {"fields": {"vocab": [], "overview": "Recognizing that since every bit-sending device made in the class sends binary messages, we lose the physical bit sending devices (they are cumbersome) and replace with an abstraction - the bit sending widget which simulates a simplex wire that can hold a state until the next state is set. Students invent a call-response protocol and use the bit sending widget to send the bits - coordination, speed, and timing become an issue.", "standards": [], "content": "", "anchor_standards": [], "unplugged": false, "duration": 1, "ancestor": null, "resources": ""}, "model": "lessons.lesson", "pk": 36}, {"fields": {"vocab": [], "overview": "Students are asked to send more complex messages without changing their bit-sending device. What can be represented with sequences of A/B state messages? Develop a protocol for sending a message to a friend that has at least 4 possibilities.", "standards": [], "content": "", "anchor_standards": [], "unplugged": false, "duration": 1, "ancestor": null, "resources": ""}, "model": "lessons.lesson", "pk": 35}, {"fields": {"vocab": [], "overview": "Welcome to Computer Science Principles! The first lesson is about getting students excited about the course and connecting their own personal interests to computer science.  Students are asked to share something they know a lot about and teach it to a small group.  Groups make a \u201crapid\u201d prototype of an innovative idea and share it.  Students watch a brief video about computing innovations.  The lesson ends with students logging into the Code.org CSP course web site, and answering a brief prompt about what \u201ccomputer science\u201d means to them.\r\n", "standards": [1795, 1778, 1916, 1735, 1722, 1695, 1777, 1733, 1826, 1904, 1885, 1820, 1819, 1818, 1817, 1864, 1850, 1787, 1889, 1761, 1764, 1763, 1758, 1757, 1759, 1754, 1753, 1760, 1755, 1750, 1749, 1752, 1751, 1914, 1935, 1959, 1979, 128, 130], "content": "", "anchor_standards": [], "unplugged": false, "duration": 1, "ancestor": null, "resources": ""}, "model": "lessons.lesson", "pk": 33}, {"fields": {"vocab": [], "overview": "Students are asked to consider messages that have binary states (which we call state 'A' and 'B' for the time being) and what can be communicated with a single bit. Students use household materials to build a physical device to send a single binary message to a friend some number of feet away and out of their line of sight.", "standards": [], "content": "", "anchor_standards": [], "unplugged": false, "duration": 1, "ancestor": null, "resources": ""}, "model": "lessons.lesson", "pk": 34}, {"fields": {"vocab": [], "overview": "In groups, students research the various mediums over which bits are sent in the real world. Focus on electricity, fiber optic, radio waves (WiFi, satellite), sound. Connection: if we can find a way for a medium to reliably represent two states, we can use it to send any digital information.", "standards": [], "content": "", "anchor_standards": [], "unplugged": false, "duration": 1, "ancestor": null, "resources": ""}, "model": "lessons.lesson", "pk": 37}, {"fields": {"vocab": [1], "overview": "At the root of all computer science is something called an algorithm. The word \u201calgorithm\u201d may sound like something complicated, but really it\u2019s just a list of instructions that someone can follow to achieve a result. To provide a solid base for the rest of your students\u2019 computer science education, we\u2019re going to focus on building a secure relationship with algorithms.", "standards": [169, 174, 187, 162, 58, 61, 23, 24, 1602, 416, 1122, 1617, 1618, 1622, 1623, 1624, 258, 262, 265, 448, 452, 455, 1160, 1161, 1164, 1165], "content": "", "anchor_standards": [162], "unplugged": true, "duration": 1, "ancestor": null, "resources": "### For the Student\r\n\r\n- Maps and arrows from Happy Maps: Single-Step Adventure\r\n- Game Pieces: Flurbs, Arrows, and Things\r\n- Assessment Worksheet: Move the Flurbs Assessment\r\n- Scissors\r\n- Glue\r\n\r\n\r\n### For the Teacher\r\n\r\n- Lesson Video\r\n- Teacher Lesson Guide\r\n- Print one Happy Maps: Single-Step Adventure for each group\r\n- Print one Move the Flurbs Assessment for each student"}, "model": "lessons.lesson", "pk": 11}, {"fields": {"vocab": [], "overview": "In this first online activity students will become familiar with basic mouse use and the block-based programming interface they will be using throughout the course. Students will begin by simply dragging images on screen and then progress to dragging puzzle pieces into the proper order.", "standards": [167, 169, 174, 180, 187, 156, 155, 17, 18, 56, 165, 61, 63], "content": "", "anchor_standards": [], "unplugged": false, "duration": 1, "ancestor": null, "resources": ""}, "model": "lessons.lesson", "pk": 20}, {"fields": {"vocab": [], "overview": "A great lesson", "standards": [], "content": "", "anchor_standards": [], "unplugged": true, "duration": 1, "ancestor": null, "resources": ""}, "model": "lessons.lesson", "pk": 12}, {"fields": {"content": "### Another section\r\n\r\nWith stuff\r\n\r\n### Vocabulary\r\nThis lesson has one new and important word:\r\n\r\n![Algorithm][1]{ .center }\r\n\r\n**Algorithm** - Say it with me: Al-go-ri-thm\r\n<br/>A list of steps that you can follow to finish a task\r\n\r\n### Step-by-Step\r\n\r\n- Ask your students for directions to the chalkboard.\r\n    - If they start shouting simultaneously, explain that you can only hear one instruction at a time. Call on students individually if that helps.\r\n- When you reach the board, ask for instructions to draw a smiley face.\r\n    - Again, request one step at a time.\r\n- Explain that many tasks can be described using a specific list of instructions. That list is called an algorithm.\r\n- Challenge your students to work together in small groups to come up with algorithms for their single-step and double-step mazes.\r\n\r\n!!! tip \"Teaching Tip\"\r\n    Students can work in pairs to create the adventures, then work in pairs to solve the adventures of others. If this feels too chaotic you can work together as a class and create the adventure on a document camera, then work together to solve it.\r\n\r\n  [1]: http://code.org/curriculum/course1/1/vocab.png", "lesson": 11, "_order": 0, "name": "Getting Started", "ancestor": null}, "model": "lessons.activity", "pk": 3}, {"fields": {"content": "### Single-Step Adventure\r\n\r\n- This worksheet helps teach students how to think ahead in order to plan a short route from the Flurb\u2019s start location to the final location, just one square away.\r\n- Print out an activity packet for every group (ideally 2 to 4 students) and cut the Maps apart. Leave the arrow symbols for the students to cut apart.\r\n- Explain the rules to the class, making sure to emphasise the new word \"algorithm.\"\r\n\r\n> Flurbs are happy, fuzzy little things. \r\n\r\n> Flurbs love to eat fruit.  Fruit is hard to find in Flurb Town. Use the maps to help the Flurb find some fruit. \r\n\r\n> Work with your group to decide which direction the Flurb needs to step to get to the fruit.  \r\n\r\n**Directions for Class:**\r\n\r\n> 1)  Cut out an arrow for each member of your team. \r\n\r\n![](http://code.org/curriculum/course1/1/arrows.png){ .center }\r\n\r\n<br/><br/>\r\n\r\n> 2)  Start with Map 1 to help the Flurb look for fruit.\r\n\r\n![](http://code.org/curriculum/course1/1/flurbStep.png){ .center }\r\n\r\n<br/><br/>\r\n\r\n> 3)  Have each member of your group put an arrow next to the map to vote for which way the Flurb should step.  \r\n\r\n> 4)  If not all arrows are pointing the same way, talk to each other and decide as a group which way the arrow should point.\r\n\r\n> 5)  When your whole group agrees on a direction, your team can share your answer with the teacher.\r\n\r\n> 6)  If your answer is correct, move on to the next map.", "lesson": 11, "_order": 1, "name": "Happy Maps", "ancestor": null}, "model": "lessons.activity", "pk": 4}, {"fields": {"content": "### Flash Chat: What did we learn?\r\n\r\n- Did you feel like you were actually telling the Flurb what to do?\r\n- What would it be like to control a robot that way?\r\n- What would you create if it were that easy to tell a computer what to do?\r\n\r\n!!! tip \"Lesson Tip\"\r\n    Flash Chat questions are intended to spark big-picture thinking about how the lesson relates to the greater world and the students' greater future.  Use your knowledge of your classroom to decide if you want to discuss these as a class, in groups, or with an elbow partner.\r\n\r\n### Vocab Shmocab\r\n\r\n- Which one of these definitions did we learn a word for today?\r\n\r\n> \"Breaking something into exactly two pieces\" <br/>\r\n> \"A list of steps that you can follow to finish a task\" <br/>\r\n> \"The plastic coating on the end of a shoelace\"<br/>\r\n>> ...and what is the word that we learned?", "lesson": 11, "_order": 2, "name": "Wrap Up", "ancestor": null}, "model": "lessons.activity", "pk": 5}, {"fields": {"content": "### Move the Flurbs\r\n\r\n- Hand out the worksheet titled [\"Move the Flurbs\"](//studio.code.org/curriculum/course1/1/Assessment1-HappyMaps.pdf) and allow students to complete the activity independently after the instructions have been well explained. ", "lesson": 11, "_order": 3, "name": "Assessment", "ancestor": null}, "model": "lessons.activity", "pk": 6}, {"fields": {"content": "Use these activities to enhance student learning. They can be used as outside of class activities or other enrichment.\r\n\r\n### Create Your Own\r\n\r\n- Allow the students to guide you toward solving a problem (that you provide) one step at a time. Point out that every time they make a step, the rest of the adventure gets easier.\r\nIf the students are still excited by the exercise, give them a more complicated configuration to solve.\r\n\r\n\r\n### Flurb Flash\r\n\r\n- Cycle quickly through single-step puzzles on your projector. Have the students hold up an arrow card or simply point in the direction that they think the Flurb should move.  ", "lesson": 11, "_order": 4, "name": "Extended Learning", "ancestor": null}, "model": "lessons.activity", "pk": 7}, {"fields": {"content": "Ask students if they have ever used a computer mouse before (or trackpad, touchscreen, whatever device they'll be using).\r\n\r\n- What does the mouse do?\r\n- How does moving the mouse affect the cursor on the screen?\r\n- You will now be using the mouse to put together puzzle pieces on the computer.\r\n- Pushing down on the mouse button is like closing your hand on a real puzzle piece and letting go of the button is like opening your hand to drop the piece. Make sure you keep your mouse button pressed while you drag each piece.\r\n- Watch the pair programming video together and discuss the role of the driver and navigator.\r\n", "lesson": 20, "_order": 0, "name": "Introduction", "ancestor": null}, "model": "lessons.activity", "pk": 8}, {"fields": {"content": "Pair programming works best with two students to a computer and clear expectations of who is the driver and who is the navigator. You may want to create a visual reminder, like hats or sashes, to identify the driver and the navigator.\n\n!!! tip \"Teaching Tip\"\n    When puzzle pieces are connected and you want to separate them, you have to drag off from the bottom of the stack. Dragging the top will move the whole stack of pieces.", "lesson": 20, "_order": 1, "name": "Jigsaw", "ancestor": null}, "model": "lessons.activity", "pk": 9}, {"fields": {"content": "Use these activities to enhance student learning. They can be used as outside of class activities or other enrichment.\r\n\r\n### Human Computer\r\n\r\nUse real puzzle pieces and pair students into the computer and the user. The user \"controls\" the computer with a mouse to put the puzzle together.", "lesson": 20, "_order": 2, "name": "Extended Learning", "ancestor": null}, "model": "lessons.activity", "pk": 10}, {"fields": {"content": "### Teacher Message\r\n\r\n - Welcome to Computer Science Principles!  This year we\u2019re going to learn a lot about computer science, but before we begin, we have to learn about everyone in this room.\r\n- One thing that makes this class unique is that you have to invent solutions to problems and create things all the time, both alone and with others. Everyone has a unique and creative perspective they bring to the table.\r\n- We\u2019ll talk about the syllabus and rest of the year at the end of class.\r\n- But let\u2019s start by seeing what everyone brings with them, and how creative we can be right now!\r\n\r\n", "lesson": 33, "_order": 0, "name": "Getting Started", "ancestor": null}, "model": "lessons.activity", "pk": 11}, {"fields": {"content": "Take out a journal or a piece of paper.\r\n\r\n### (2 min) Prompt: What\u2019s something that you know a lot about? Something that you could teach somebody?\r\n> This doesn\u2019t have to be a subject in school - it very well might not be.  As a person, as an individual who is living and breathing in this world, there is something that you probably know a lot about - maybe you feel like you know more about than most people. What is that thing?\r\n\r\n!!! tip \"Teaching Tip\"\r\n    What you\u2019re trying to do here is get students to state something that they are interested in, but also know a lot about - something they might have insights into.  A big part of students\u2019 enthusiasm for sharing will come from your enthusiasm and genuine interest in getting to know them.  Students might need prodding: there is something that makes them interesting and unique.  Something they like to do, have interest in, read about, have some expertise in, a hidden talent.\r\n\r\n**Give students 1 minute to write that thing down on a post-it and stick it on the wall** (putting name on the post-it is optional)  Note: if you don\u2019t have post-its, use note cards and tape, or scraps of paper.  Anything that allows for these topics/areas of interest to be seen in one place.\r\n- Survey the post-its on the wall to see the diversity of responses, maybe invite students to do this as well.\r\n\r\n### (15 min) In groups: introduce selves, teach about your thing\r\n- Take post-its and make groups of 4 that represent a diverse set of interests.  \r\n  - For example, grab: \u201cvideo games\u201d, \u201cbasketball\u201d, \u201ccooking\u201d, \u201cgrowing vegetables\u201d\r\n- Once in groups, give each student 3 minutes to:\r\n  - introduce themselves\r\n  - explain the thing they know a lot about\r\n  - teach the group something about it, or tell the group something interesting about it\r\n- *You may want to set a timer and tell them when to switch.*\r\n\r\n### (15 min) After groups are doing sharing: Identify the technological impacts and rapid prototype\r\n- Remarks: \r\n    - *People seem to say that technology is all around us, that it affects everything we do.  Is that true?  Technological innovation is about recognizing a problem that needs to be solved, or recognizing something needs improving and then building a tool to solve it.*  \r\n    - **As a class we\u2019re going to see how innovative we can be.  We\u2019re going to do something called \u201crapid prototyping.\u201d**   (Prototype is a fancy word that means a preliminary sketch of an idea or model for something new.  It\u2019s the original drawing from which something real might be built or created.)\r\n\r\n### Instructions - part 1:\r\nFor the things of interest within each group, go around and:\r\n- Try to identify some way that technology is used with, or affects that thing\r\n- Make a suggestion for either:\r\n    - a way that technology might be improved to make it better, faster, easier to use\r\nsome problem, or aspect of that thing, that a creative or innovative technology might help solve, or at least make better?\r\n    - Everyone in the group should make suggestions for any of the areas of interest at your table - you are not limited to your original thing.\r\n\r\n### Instructions - part 2: \r\n**As a group brainstorm about the technology ideas at the table.  Get excited about one.** As a group, nominate the idea you\u2019ve discussed that you think would be the *most interesting* to everyone else in the class. \r\n\r\n**Start to sketch it out on a poster.  Make a visual representation of your ideas.**  Remember this is a rapid prototype.  Just something to quickly convey the idea.\r\n\r\n!!! tip \"Teaching Tip\"\r\n    Keep things quick.  If a group is worried about not being innovative enough, remind them that very small ideas can have big consequences.  People once thought it was ridiculous that you would want to send a short text message to another person over a phone.  Alternatively, a group may have a great idea that they want to spend more time on.  They can do that later.  For now, just remind them it\u2019s a rapid prototype.\r\n\r\nPut prototype posters on the wall\r\nSurvey the results\r\nTime permitting, ask an individual from each group to explain what the the thing is what their innovation is.\r\nIf time is short, ask for one or two volunteers, or hand pick a poster or two for a student to explain.  You can leave the posters up for people to look at tomorrow.\r\n\r\n### Teacher Message\r\nTake this opportunity to explain the importance of bringing individual interests and perspectives to this course. Students are not only encouraged to find areas of personal interest in this course, it is actually mandated as part of the Performance Tasks. From day one, students should be thinking about how to apply the principles they learn to their own lives, and hopefully they will be excited to do so.\r\n\r\n!!! tip \"Teaching Tip\"\r\n    If this is your first time teaching this course, you may not know exactly how to present an entire year of activities and exploration on the first day. The text below is one possible way to contextualize today\u2019s activity and build excitement about the rest of the year. Feel free to do what best matches your own style, and use the ideas to craft your own presentation of the course.\r\n\r\n    - We are just starting this class, but you all bring passions and knowledge about things you care about. And whatever those things are it is likely (if not inevitable) that they involve computing technology in some way.\r\n    - This class is about the principles of computer science.  The principles that underlie much of the technology around us.\r\n    - The reason this class exists is because not enough people in our school/town/city/country/world know or understand things about computer science. Not enough people know the basics that you need to know to be able to see where you can make a difference. Not enough diverse views, interests, opinions exist among the people who do more than use technology - they create new technology\r\n    - This class is about taking a step in that direction.  \r\n    - Your job as a student in the class is to be on the lookout, to be alert, for where and how computer science affects or impacts the things you care about, the things you know about.  Whatever it is you want to do in your life, it\u2019s pretty likely that technology affects it in some way, or that some technological innovation is called for.\r\n    - In fact, for the AP assessment you must create an app that reflects a personal interest or problem you\u2019re trying to solve.  You must also explore a technological innovation and write about it.\r\n    - Don\u2019t worry, we\u2019ll practice these things, and through the course you\u2019ll learn about the principles that underlie all this stuff.\r\n    - The way the class works, we often ask you to invent your own solution to problems.  Even if it\u2019s a problem that\u2019s been solved before, thinking like a computer scientist is a different mindset to be in.  We study a lot of things in this class not only because it\u2019s foundational knowledge, but because of the *way it makes you think*, they way it asks you to solve problems, on your own or in collaboration with others.\r\n    - Inventing things, and having insights about how things work, and how they might work better is what this class is about.  Everyone has the ability to contribute.  Everyone has unique insights into something.  Whatever it is you care about, whatever it is that makes you different, is the value you bring to the class.  Everyone is unique, but we\u2019re all in this together.\r\n\r\n### Show \u201cInnovations\u201d Video (5 mins)\r\n- Note: make sure to leave time for students to log in to Code Studio.  The video is available there as well.\r\n", "lesson": 33, "_order": 1, "name": "Activity", "ancestor": null}, "model": "lessons.activity", "pk": 12}, {"fields": {"content": "*Transition:* Let\u2019s get logged in and setup so we can hit the ground running next time.\r\n\r\n### Quick Tech Setup (10 mins)\r\n1. Create class account\r\n    - Share the link for students to sign up for the class\r\n2. Navigate to Unit 1 in Code Studio\r\n    - Explain why it\u2019s called \u201ccode studio\u201d\r\n3. Investigate the bubbles:\r\n    - One is a summary of this class with a link to the video\r\n    - One is a free response prompt -- Please read the directions and complete this.  **This is your assignment for the day.**\r\n\r\n*Say:* See you tomorrow!", "lesson": 33, "_order": 2, "name": "Wrap-up", "ancestor": null}, "model": "lessons.activity", "pk": 13}, {"fields": {"content": "- Ask students to think about how the adults in their lives might answer the question, \"What computing innovation has had the most significant personal impact on your life?\u201c\r\n- To reinforce visual learning, suggest that students create time-lines showing the years when the various innovations they hear about from other adults were invented or became available to consumers.\r\n- Blown to Bits http://www.bitsbook.com/ - read Chapter 4, Needles in the Haystack, pages 141-142 (Placements, Clicks, and Auctions), then answer the following question about innovation:\r\n    - Discuss the positive and negative results of Overture's three search engine innovations. How did those innovations turn out today?.\r\n", "lesson": 33, "_order": 3, "name": "Extended Learning", "ancestor": null}, "model": "lessons.activity", "pk": 14}, {"fields": {"content": "- Select an innovation. Describe the positive and negative impacts it has had on the world. (A satisfactory answer reflects awareness and analysis of the effects on populations beyond the students\u2019 immediately locale.)\r\n- Speculate on how students 25 years from now will answer, \"What computing innovation has had a significant impact on your life?\" (A satisfactory answer includes a non-trivial consideration of how technology will likely change from, and perhaps build upon, what is currently available)\r\n", "lesson": 33, "_order": 4, "name": "Assessment Questions", "ancestor": null}, "model": "lessons.activity", "pk": 15}, {"fields": {"lesson": 11, "_order": 0, "name": "List steps", "description": "List steps to move a character around a map"}, "model": "lessons.objective", "pk": 3}, {"fields": {"lesson": 11, "_order": 1, "name": "Arrange directions", "description": "Arrange directions to reach a predetermined goal"}, "model": "lessons.objective", "pk": 4}, {"fields": {"lesson": 11, "_order": 2, "name": "Predict ending", "description": "Predict where a character will land, given a list of steps"}, "model": "lessons.objective", "pk": 5}, {"fields": {"lesson": 20, "_order": 0, "name": "Use a mouse to input information into a computer", "description": "Use a mouse to input information into a computer"}, "model": "lessons.objective", "pk": 6}, {"fields": {"lesson": 20, "_order": 1, "name": "Recall and apply the rules of pair programming", "description": "Recall and apply the rules of pair programming"}, "model": "lessons.objective", "pk": 7}, {"fields": {"lesson": 20, "_order": 2, "name": "Use pair programming to complete collaborative tasks with or without a computer", "description": "Use pair programming to complete collaborative tasks with or without a computer"}, "model": "lessons.objective", "pk": 8}, {"fields": {"lesson": 20, "_order": 3, "name": "Identify situations when the rules of pair programming are not followed", "description": "Identify situations when the rules of pair programming are not followed"}, "model": "lessons.objective", "pk": 9}, {"fields": {"lesson": 20, "_order": 4, "name": "Arrange puzzle pieces into the proper order", "description": "Arrange puzzle pieces into the proper order"}, "model": "lessons.objective", "pk": 10}, {"fields": {"lesson": 33, "_order": 0, "name": "Communicate with classmates about computing innovations in their lives.", "description": "Communicate with classmates about computing innovations in their lives."}, "model": "lessons.objective", "pk": 11}, {"fields": {"lesson": 33, "_order": 1, "name": "Describe positive and negative effects of computing innovations.", "description": "Describe positive and negative effects of computing innovations."}, "model": "lessons.objective", "pk": 12}]