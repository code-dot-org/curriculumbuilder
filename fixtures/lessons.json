[{"fields": {"detailDef": "A process or set of rules to be followed in calculations or other problem-solving operations, especially by a computer.", "simpleDef": "A list of steps that you can follow to finish a task.", "word": "Algorithm"}, "model": "lessons.vocab", "pk": 1}, {"fields": {"vocab": [1], "overview": "At the root of all computer science is something called an algorithm. The word \u201calgorithm\u201d may sound like something complicated, but really it\u2019s just a list of instructions that someone can follow to achieve a result. To provide a solid base for the rest of your students\u2019 computer science education, we\u2019re going to focus on building a secure relationship with algorithms.", "standards": [], "content": "", "anchor_standards": [], "unplugged": true, "duration": 1, "ancestor": null, "resources": "### For the Student\r\n\r\n- Maps and arrows from Happy Maps: Single-Step Adventure\r\n- Game Pieces: Flurbs, Arrows, and Things\r\n- Assessment Worksheet: Move the Flurbs Assessment\r\n- Scissors\r\n- Glue\r\n\r\n\r\n### For the Teacher\r\n\r\n- Lesson Video\r\n- Teacher Lesson Guide\r\n- Print one Happy Maps: Single-Step Adventure for each group\r\n- Print one Move the Flurbs Assessment for each student"}, "model": "lessons.lesson", "pk": 11}, {"fields": {"vocab": [], "overview": "In this first online activity students will become familiar with basic mouse use and the block-based programming interface they will be using throughout the course. Students will begin by simply dragging images on screen and then progress to dragging puzzle pieces into the proper order.", "standards": [167, 169, 174, 180, 187, 156, 155, 17, 18, 56, 165, 61, 63], "content": "", "anchor_standards": [], "unplugged": false, "duration": 1, "ancestor": null, "resources": ""}, "model": "lessons.lesson", "pk": 20}, {"fields": {"vocab": [], "overview": "A great lesson", "standards": [], "content": "", "anchor_standards": [], "unplugged": true, "duration": 1, "ancestor": null, "resources": ""}, "model": "lessons.lesson", "pk": 12}, {"fields": {"content": "### Another section\r\n\r\nWith stuff\r\n\r\n### Vocabulary\r\nThis lesson has one new and important word:\r\n\r\n![Algorithm][1]{ .center }\r\n\r\n**Algorithm** - Say it with me: Al-go-ri-thm\r\n<br/>A list of steps that you can follow to finish a task\r\n\r\n### Step-by-Step\r\n\r\n- Ask your students for directions to the chalkboard.\r\n    - If they start shouting simultaneously, explain that you can only hear one instruction at a time. Call on students individually if that helps.\r\n- When you reach the board, ask for instructions to draw a smiley face.\r\n    - Again, request one step at a time.\r\n- Explain that many tasks can be described using a specific list of instructions. That list is called an algorithm.\r\n- Challenge your students to work together in small groups to come up with algorithms for their single-step and double-step mazes.\r\n\r\n!!! tip \"Teaching Tip\"\r\n    Students can work in pairs to create the adventures, then work in pairs to solve the adventures of others. If this feels too chaotic you can work together as a class and create the adventure on a document camera, then work together to solve it.\r\n\r\n  [1]: http://code.org/curriculum/course1/1/vocab.png", "lesson": 11, "_order": 0, "name": "Getting Started", "ancestor": null}, "model": "lessons.activity", "pk": 3}, {"fields": {"content": "### Single-Step Adventure\r\n\r\n- This worksheet helps teach students how to think ahead in order to plan a short route from the Flurb\u2019s start location to the final location, just one square away.\r\n- Print out an activity packet for every group (ideally 2 to 4 students) and cut the Maps apart. Leave the arrow symbols for the students to cut apart.\r\n- Explain the rules to the class, making sure to emphasise the new word \"algorithm.\"\r\n\r\n> Flurbs are happy, fuzzy little things. \r\n\r\n> Flurbs love to eat fruit.  Fruit is hard to find in Flurb Town. Use the maps to help the Flurb find some fruit. \r\n\r\n> Work with your group to decide which direction the Flurb needs to step to get to the fruit.  \r\n\r\n**Directions for Class:**\r\n\r\n> 1)  Cut out an arrow for each member of your team. \r\n\r\n![](http://code.org/curriculum/course1/1/arrows.png){ .center }\r\n\r\n<br/><br/>\r\n\r\n> 2)  Start with Map 1 to help the Flurb look for fruit.\r\n\r\n![](http://code.org/curriculum/course1/1/flurbStep.png){ .center }\r\n\r\n<br/><br/>\r\n\r\n> 3)  Have each member of your group put an arrow next to the map to vote for which way the Flurb should step.  \r\n\r\n> 4)  If not all arrows are pointing the same way, talk to each other and decide as a group which way the arrow should point.\r\n\r\n> 5)  When your whole group agrees on a direction, your team can share your answer with the teacher.\r\n\r\n> 6)  If your answer is correct, move on to the next map.", "lesson": 11, "_order": 1, "name": "Happy Maps", "ancestor": null}, "model": "lessons.activity", "pk": 4}, {"fields": {"content": "### Flash Chat: What did we learn?\r\n\r\n- Did you feel like you were actually telling the Flurb what to do?\r\n- What would it be like to control a robot that way?\r\n- What would you create if it were that easy to tell a computer what to do?\r\n\r\n!!! tip \"Lesson Tip\"\r\n    Flash Chat questions are intended to spark big-picture thinking about how the lesson relates to the greater world and the students' greater future.  Use your knowledge of your classroom to decide if you want to discuss these as a class, in groups, or with an elbow partner.\r\n\r\n### Vocab Shmocab\r\n\r\n- Which one of these definitions did we learn a word for today?\r\n\r\n> \"Breaking something into exactly two pieces\" <br/>\r\n> \"A list of steps that you can follow to finish a task\" <br/>\r\n> \"The plastic coating on the end of a shoelace\"<br/>\r\n>> ...and what is the word that we learned?", "lesson": 11, "_order": 2, "name": "Wrap Up", "ancestor": null}, "model": "lessons.activity", "pk": 5}, {"fields": {"content": "### Move the Flurbs\r\n\r\n- Hand out the worksheet titled [\"Move the Flurbs\"](//studio.code.org/curriculum/course1/1/Assessment1-HappyMaps.pdf) and allow students to complete the activity independently after the instructions have been well explained. ", "lesson": 11, "_order": 3, "name": "Assessment", "ancestor": null}, "model": "lessons.activity", "pk": 6}, {"fields": {"content": "Use these activities to enhance student learning. They can be used as outside of class activities or other enrichment.\r\n\r\n### Create Your Own\r\n\r\n- Allow the students to guide you toward solving a problem (that you provide) one step at a time. Point out that every time they make a step, the rest of the adventure gets easier.\r\nIf the students are still excited by the exercise, give them a more complicated configuration to solve.\r\n\r\n\r\n### Flurb Flash\r\n\r\n- Cycle quickly through single-step puzzles on your projector. Have the students hold up an arrow card or simply point in the direction that they think the Flurb should move.  ", "lesson": 11, "_order": 4, "name": "Extended Learning", "ancestor": null}, "model": "lessons.activity", "pk": 7}, {"fields": {"content": "Ask students if they have ever used a computer mouse before (or trackpad, touchscreen, whatever device they'll be using).\r\n\r\n- What does the mouse do?\r\n- How does moving the mouse affect the cursor on the screen?\r\n- You will now be using the mouse to put together puzzle pieces on the computer.\r\n- Pushing down on the mouse button is like closing your hand on a real puzzle piece and letting go of the button is like opening your hand to drop the piece. Make sure you keep your mouse button pressed while you drag each piece.\r\n- Watch the pair programming video together and discuss the role of the driver and navigator.\r\n", "lesson": 20, "_order": 0, "name": "Introduction", "ancestor": null}, "model": "lessons.activity", "pk": 8}, {"fields": {"content": "Pair programming works best with two students to a computer and clear expectations of who is the driver and who is the navigator. You may want to create a visual reminder, like hats or sashes, to identify the driver and the navigator.\n\n!!! tip \"Teaching Tip\"\n    When puzzle pieces are connected and you want to separate them, you have to drag off from the bottom of the stack. Dragging the top will move the whole stack of pieces.", "lesson": 20, "_order": 1, "name": "Jigsaw", "ancestor": null}, "model": "lessons.activity", "pk": 9}, {"fields": {"content": "Use these activities to enhance student learning. They can be used as outside of class activities or other enrichment.\r\n\r\n### Human Computer\r\n\r\nUse real puzzle pieces and pair students into the computer and the user. The user \"controls\" the computer with a mouse to put the puzzle together.", "lesson": 20, "_order": 2, "name": "Extended Learning", "ancestor": null}, "model": "lessons.activity", "pk": 10}, {"fields": {"lesson": 11, "_order": 0, "name": "List steps", "description": "List steps to move a character around a map"}, "model": "lessons.objective", "pk": 3}, {"fields": {"lesson": 11, "_order": 1, "name": "Arrange directions", "description": "Arrange directions to reach a predetermined goal"}, "model": "lessons.objective", "pk": 4}, {"fields": {"lesson": 11, "_order": 2, "name": "Predict ending", "description": "Predict where a character will land, given a list of steps"}, "model": "lessons.objective", "pk": 5}, {"fields": {"lesson": 20, "_order": 0, "name": "Use a mouse to input information into a computer", "description": "Use a mouse to input information into a computer"}, "model": "lessons.objective", "pk": 6}, {"fields": {"lesson": 20, "_order": 1, "name": "Recall and apply the rules of pair programming", "description": "Recall and apply the rules of pair programming"}, "model": "lessons.objective", "pk": 7}, {"fields": {"lesson": 20, "_order": 2, "name": "Use pair programming to complete collaborative tasks with or without a computer", "description": "Use pair programming to complete collaborative tasks with or without a computer"}, "model": "lessons.objective", "pk": 8}, {"fields": {"lesson": 20, "_order": 3, "name": "Identify situations when the rules of pair programming are not followed", "description": "Identify situations when the rules of pair programming are not followed"}, "model": "lessons.objective", "pk": 9}, {"fields": {"lesson": 20, "_order": 4, "name": "Arrange puzzle pieces into the proper order", "description": "Arrange puzzle pieces into the proper order"}, "model": "lessons.objective", "pk": 10}]